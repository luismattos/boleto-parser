[tool.poetry]
name = "boleto-parser"
version = "0.1.0"
description = "Parser inteligente de boletos banc√°rios PDF"
authors = ["Luis Mattos <luismattos89@gmail.com>"]
readme = "README.md"
packages = [{ include = "src" }]

[tool.poetry.scripts]
boleto-parser = "src.cli:app"
dev = "src.cli:dev_app"
prod = "src.cli:prod_app"
api = "src.api:app"

[tool.poetry.dependencies]
python = "^3.9"
typer = "^0.9.0"
python-multipart = "^0.0.6"
PyPDF2 = "^3.0.1"
python-magic = "^0.4.27"
pydantic = "^2.5.0"
fastapi = "^0.104.1"
uvicorn = "^0.24.0"
rich = "^14.0.0"
structlog = "^25.4.0"
regex = "^2024.11.6"
pdoc = "^15.0.4"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
black = "^23.0.0"
isort = "^5.12.0"
mypy = "^1.7.0"
pre-commit = "^3.5.0"
pytest-cov = "^4.1.0"
flake8 = "^6.0.0"
pytest-mock = "^3.12.0"
factory-boy = "^3.3.0"
faker = "^20.1.0"
nox = "^2025.5.1"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py39']

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=src --cov-report=html --cov-report=term-missing"

[tool.coverage.run]
source = ["src"]
omit = ["tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
